# C:\MinGW\bin\mingw32-make.exe

#OBJS specifies which files to compile as part of the project
OBJS = inputHandler.cpp textures.cpp jsonLoader.cpp gameStateMachine.cpp playState.cpp transitionState.cpp menuState.cpp values.cpp hud.cpp animation.cpp position.cpp collision.cpp sprite.cpp hero.cpp target.cpp projectile.cpp enemy.cpp scenary.cpp game.cpp main.cpp

#CC specifies which compiler we're using
CC = g++

#INCLUDE_PATHS specifies the additional include paths we'll need
INCLUDE_PATHS = -IC:\dev\SDL\mingw\SDL2-2.0.5\i686-w64-mingw32\include\SDL2 -IC:\dev\SDL\mingw\SDL2_image-2.0.1\i686-w64-mingw32\include\SDL2 -IC:\dev\SDL\mingw\SDL2_ttf-2.0.14\i686-w64-mingw32\include\SDL2

#LIBRARY_PATHS specifies the additional library paths we'll need
LIBRARY_PATHS = -LC:\dev\SDL\mingw\SDL2-2.0.5\i686-w64-mingw32\lib -LC:\dev\SDL\mingw\SDL2_image-2.0.1\i686-w64-mingw32\lib -LC:\dev\SDL\mingw\SDL2_ttf-2.0.14\i686-w64-mingw32\lib

#COMPILER_FLAGS specifies the additional compilation options we're using
# -w suppresses all warnings
# -Wl,-subsystem,windows gets rid of the console window
COMPILER_FLAGS = -w -Wl,-subsystem,windows -std=c++11 -std=gnu++11

#LINKER_FLAGS specifies the libraries we're linking against
LINKER_FLAGS = -lmingw32 -lSDL2main -lSDL2 -lSDL2_image -lSDL2_ttf

#OBJ_NAME specifies the name of our exectuable
OBJ_NAME = game

#This is the target that compiles our executable
all : $(OBJS)
	$(CC) $(OBJS) $(INCLUDE_PATHS) $(LIBRARY_PATHS) $(COMPILER_FLAGS) $(LINKER_FLAGS) -o $(OBJ_NAME)
